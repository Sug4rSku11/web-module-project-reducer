[{"/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/index.js":"1","/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/App.js":"2","/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/reportWebVitals.js":"3","/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/components/TotalDisplay.js":"4","/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/components/CalcButton.js":"5","/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/reducers/index.js":"6","/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/actions/index.js":"7"},{"size":500,"mtime":1635798198000,"results":"8","hashOfConfig":"9"},{"size":3212,"mtime":1635818689000,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1635798198000,"results":"11","hashOfConfig":"9"},{"size":424,"mtime":1635798198000,"results":"12","hashOfConfig":"9"},{"size":286,"mtime":1635798198000,"results":"13","hashOfConfig":"9"},{"size":1624,"mtime":1635818725000,"results":"14","hashOfConfig":"9"},{"size":856,"mtime":1635815498000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mhct57",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/index.js",[],"/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/App.js",["32","33","34"],"import React, { useReducer} from 'react';\nimport reducer, { initialState } from './reducers';\n\nimport './App.css';\n\nimport TotalDisplay from './components/TotalDisplay';\nimport CalcButton from './components/CalcButton';\nimport { addOne,\n          applyNumber,\n          changeOperation,\n          clearDisplay,\n          memoryAdd,\n          memoryRecall,\n          memoryClear} from './actions';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const handleApplyNumber = (number) => {\n    dispatch(applyNumber(number))\n  }\n  const handleChangeOperator = (operator) => {\n    dispatch(changeOperation(operator))\n  }\n  const handleClearDisplay = () => {\n    dispatch(clearDisplay)\n  }\n  const handleMemoryAdd = () => {\n    dispatch(memoryAdd())\n  }\n  const handleMemoryRecall = () => {\n    dispatch(memoryRecall())\n  }\n  const handleMemoryClear = () => {\n    dispatch(memoryClear())\n  }\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\"><img width=\"40px\" src=\"./Lambda-Logo-Red.png\"/> Lambda Reducer Challenge</a>\n      </nav>\n\n      <div className = \"container row mt-5\">\n        <div className=\"col-md-12 d-flex justify-content-center\">\n          <form name=\"Cal\">\n            \n            <TotalDisplay value={state.total}/>\n            <div className=\"row details\">\n              <span id=\"operation\"><b>Operation:</b>{state.operation}</span>\n              <span id=\"memory\"><b>Memory:</b> {state.memory}</span>\n            </div>\n            \n            <div className=\"row\">\n              <CalcButton value={\"M+\"} onClick={() => handleMemoryAdd()}/>\n              <CalcButton value={\"MR\"} onClick={() => handleMemoryRecall()}/>\n              <CalcButton value={\"MC\"} onClick={() => handleMemoryClear()}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton value={1} onClick={() => handleApplyNumber(1)}/>\n              <CalcButton value={2} onClick={() => handleApplyNumber(2)}/>\n              <CalcButton value={3} onClick={() => handleApplyNumber(3)}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton value={4} onClick={() => handleApplyNumber(4)}/>\n              <CalcButton value={5} onClick={() => handleApplyNumber(5)}/>\n              <CalcButton value={6} onClick={() => handleApplyNumber(6)}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton value={7} onClick={() => handleApplyNumber(7)}/>\n              <CalcButton value={8} onClick={() => handleApplyNumber(8)}/>\n              <CalcButton value={9} onClick={() => handleApplyNumber(9)}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton value={\"+\"} onClick={() => handleChangeOperator('+')}/>\n              <CalcButton value={\"*\"} onClick={() => handleChangeOperator('*')}/>\n              <CalcButton value={\"-\"} onClick={() => handleChangeOperator('-')}/>\n            </div>\n\n            <div className=\"row ce_button\">\n              <CalcButton value={\"CE\"} onClick={() => handleClearDisplay()}/>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",["35","36"],"/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/reportWebVitals.js",[],"/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/components/TotalDisplay.js",[],"/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/components/CalcButton.js",[],"/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/reducers/index.js",["37"],"/Volumes/WebDev/LambdaProjects/3.2_Advanced_State_Management/Monday/web-module-project-reducer/src/actions/index.js",[],{"ruleId":"38","severity":1,"message":"39","line":8,"column":10,"nodeType":"40","messageId":"41","endLine":8,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":40,"column":9,"nodeType":"44","endLine":40,"endColumn":46},{"ruleId":"45","severity":1,"message":"46","line":40,"column":46,"nodeType":"44","endLine":40,"endColumn":93},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":16,"column":5,"nodeType":"53","messageId":"54","endLine":23,"endColumn":6},"no-unused-vars","'addOne' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]